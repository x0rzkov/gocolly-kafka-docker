---
version: '3.7'
services:

  gocolly-consumer:
    image: x0rzkov/consumer-app:latest-alpine
    container_name: ${NAMESPACE}-consumer
    build:
      context: cmd/consumer
      dockerfile: Dockerfile
    links:
    - mongodb:mobgodb
    depends_on:
    - mongodb

  gocolly-producer:
    image: x0rzkov/producer-app:latest-alpine
    container_name: ${NAMESPACE}-producer
    build:
      context: cmd/producer
      dockerfile: Dockerfile

  mongodb:
    image: mongo:latest
    container_name: ${NAMESPACE}-mongodb
    volumes:
    - mongo-data:/var/lib/mongodb/db
    - mongo-backup:/var/lib/backup
    ports:
    - 27017:27017
    networks:
    - internal
    - web
    # command: mongod

  mongoexpress:
    restart: always
    image: mongo-express
    container_name: ${NAMESPACE}-mongoexpress
    links:
    - mongodb:mongo
    environment:
    - VCAP_APP_PORT=8090
    - ME_CONFIG_MONGODB_AUTH_USERNAME=""
    - ME_CONFIG_MONGODB_AUTH_PASSWORD=""
    depends_on:
    - mongodb
    ports:
    - 8090:8090
    networks:
    - internal
    - web

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.2
    container_name: ${NAMESPACE}-elastic
    ports:
    - 9200:9200
    - 9300:9300
    environment:
      discovery.type: single-node
    networks:
    - internal
    - web

  zookeeper:
    image: zookeeper
    container_name: ${NAMESPACE}-zookeper
    networks:
    - internal
    - web

  hbase:
    image: x0rzkov/hbase:1.3.1-alpine
    container_name: ${NAMESPACE}-hbase
    build:
      context: .docker/hbase
      dockerfile: Dockerfile
    ports:
    - 8080:8080
    - 8085:8085
    networks:
    - internal
    - web

  kafka:
    image: x0rzkov/kafka:2.5.0-alpine
    container_name: ${NAMESPACE}-kafka
    build:
      context: .docker/kafka
      dockerfile: Dockerfile
    ports:
    - 9092:9092
    depends_on:
    - zookeeper
    networks:
    - internal
    - web

networks:
  #default:
  #  driver: bridge
  internal:
  web:
    external: true  

volumes:
  mongo-data:
  mongo-backup:
